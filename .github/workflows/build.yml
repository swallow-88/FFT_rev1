name: Build Kivy APK

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash -eux

    steps:
      # 1) 소스 체크아웃 및 Python/Java 설치
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      # 2) Buildozer 및 python-for-android 설치
      - name: Install Buildozer & python-for-android
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential zip unzip
          python -m pip install --upgrade pip cython buildozer==1.5.0
          pip install python-for-android==2023.9.16

      # 3) 외부 Android SDK(cmdline-tools) 설치
      - name: Install Android SDK commandline-tools
        run: |
          SDK="$HOME/android-sdk"
          mkdir -p "$SDK/cmdline-tools" "$SDK/platform-tools"
          curl -fSL \
            https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip \
            -o cmdline-tools.zip
          unzip -q cmdline-tools.zip -d "$SDK/cmdline-tools"
          mv "$SDK/cmdline-tools/cmdline-tools" "$SDK/cmdline-tools/latest"

      # 4) SDK에 플랫폼 · 빌드툴 · NDK 설치
      - name: Install Android packages
        env:
          ANDROID_SDK_ROOT: ${{ runner.home }}/android-sdk
          PATH: ${{ runner.home }}/android-sdk/cmdline-tools/latest/bin:${{ runner.home }}/android-sdk/platform-tools:$PATH
        run: |
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" \
            "platform-tools" \
            "platforms;android-31" \
            "build-tools;31.0.0" \
            "ndk;25.2.9519653"

      # 5) 환경변수 설정 (buildozer.spec 의 android.sdk_path, android.ndk_path 와 일치시킵니다)
      - name: Export Android env vars
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV

      # 6) APK 빌드
      - name: Build APK
        run: |
          buildozer android debug --verbose | tee build.log

      # 7) 로그 업로드
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-log
          path: build.log

      # 8) APK 업로드 (GitHub Release)
      - id: find_apk
        run: echo "apk_path=$(find bin -name '*.apk' -print -quit)" >> $GITHUB_OUTPUT

      - uses: softprops/action-gh-release@v1
        if: success() && steps.find_apk.outputs.apk_path != ''
        with:
          files: ${{ steps.find_apk.outputs.apk_path }}
          tag_name: nightly-${{ github.run_number }}
          name: Nightly Build #${{ github.run_number }}
          prerelease: true
