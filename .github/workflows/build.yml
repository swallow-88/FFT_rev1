name: Build & Release FFTApp APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      ANDROID_HOME:     /usr/local/lib/android/sdk
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROIDNDK:       /usr/local/lib/android/sdk/ndk/25.2.9519653
      ANDROIDMINAPI:    24

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug show buildozer.spec
        run: |
          echo "▶ PWD=$(pwd)"
          head -n50 buildozer.spec

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install apt packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            build-essential git zip unzip wget curl \
            python3-pip python3-dev ant \
            cmake ninja-build autoconf automake libtool pkg-config \
            openjdk-11-jdk-headless

      - name: Configure Android SDK paths
        run: |
          echo "ANDROID_HOME=${ANDROID_HOME}"     >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}" >> $GITHUB_ENV
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/tools/bin"           >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools"      >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/emulator"            >> $GITHUB_PATH

      - name: Symlink sdkmanager for Buildozer
        run: |
          mkdir -p $ANDROID_SDK_ROOT/tools/bin
          ln -sf $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
                   $ANDROID_SDK_ROOT/tools/bin/sdkmanager

      - name: Install required Android SDK components
        run: |
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "build-tools;35.0.0" \
            "ndk;25.2.9519653" \
            "cmake;3.22.1" \
            "extras;google;m2repository" \
            "extras;android;m2repository"
            
      - name: Pin packaging & setuptools
        run: |
          python3 -m pip install --upgrade pip
          pip install setuptools==65.5.0 packaging==21.3 wheel

      
      - name: Install Buildozer & python-for-android
        run: |
          python3 -m pip install --upgrade pip
          pip install \
            cython==0.29.34 \
            buildozer==1.5.0 \
            python-for-android==2024.1.21

      - name: Build APK (Debug) and capture logs
        run: |
          buildozer android clean || true
          # stdout+stderr 를 모두 buildozer.log 로 남깁니다
          buildozer -v android debug --log-level 2 2>&1 | tee buildozer.log
        continue-on-error: true

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: buildozer-log
          path: buildozer.log

      - name: Locate generated APK(s)
        run: |
          echo "🔍 전체 APK 찾기:"
          find . -type f -name '*.apk' -print

      - name: Debug List APKs in bin/
        run: |
          echo "▶ ./bin/ 폴더 내용:"
          ls -l ./bin/*.apk || echo "bin/*.apk 파일이 없습니다!"

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: FFTApp-apks
          path: |
            ./bin/*.apk
            ./.buildozer/android/platform/*/build/outputs/apk/**/*.apk
          if-no-files-found: error
