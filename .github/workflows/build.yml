# .github/workflows/build.yml

name: ðŸ“¦ Build & Release FFTApp APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      # Use the runnerâ€™s preinstalled Android SDK
      ANDROID_HOME:     /usr/local/lib/android/sdk
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 11 (Temurin)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            build-essential git zip unzip wget curl \
            python3-pip python3-dev ant \
            cmake ninja-build openjdk-11-jdk-headless \
            autoconf automake libtool pkg-config

      - name: Configure Android SDK paths
        run: |
          echo "ANDROID_HOME=${ANDROID_HOME}" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}" >> $GITHUB_ENV
          # add all likely SDK tool dirs to PATH
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/tools/bin"           >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools"      >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/emulator"            >> $GITHUB_PATH

      - name: Verify sdkmanager is available
        run: |
          echo "PATH = $PATH"
          which sdkmanager || { echo "ERROR: sdkmanager not found"; exit 1; }
          sdkmanager --version

      - name: Accept all Android SDK licenses
        run: yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses

      - name: Install required Android SDK components
        run: |
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "ndk;23.1.7779620" \
            "cmake;3.22.1" \
            "extras;google;m2repository" \
            "extras;android;m2repository"

      - name: Pin packaging to avoid setuptools conflict
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip install packaging==21.3

      - name: Install Buildozer & python-for-android
        run: |
          pip install cython==0.29.34 \
                      buildozer==1.5.0 \
                      python-for-android==2023.09.16

      - name: Build APK (Debug)
        run: |
          # clean out previous artifacts
          buildozer android clean || true
          # run a fully verbose build
          buildozer android debug --verbose

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: FFTApp-debug-apk
          path: bin/*.apk
          if-no-files-found: error
