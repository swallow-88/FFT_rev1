# .github/workflows/build.yml

name: Build & Release FFTApp APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      ANDROID_HOME:     /usr/local/lib/android/sdk
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      # 1) Check out your code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Set up Java (for Android SDK and Buildozer)
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      # 3) Set up Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 4) Install system build dependencies
      - name: Install apt packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            build-essential git zip unzip wget curl \
            python3-pip python3-dev ant \
            cmake ninja-build autoconf automake libtool pkg-config \
            openjdk-11-jdk-headless

      # 5) Configure Android SDK paths (use runner-preinstalled SDK)
      - name: Configure Android SDK paths
        run: |
          echo "ANDROID_HOME=${ANDROID_HOME}" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}" >> $GITHUB_ENV
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/tools/bin"           >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools"      >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/emulator"            >> $GITHUB_PATH


# … 기존 steps 중 “Configure Android SDK paths” 바로 뒤에 추가

      - name: Symlink sdkmanager for Buildozer
        run: |
          # Buildozer가 /usr/local/lib/android/sdk/tools/bin/sdkmanager 를 찾으므로
          mkdir -p $ANDROID_SDK_ROOT/tools/bin
          ln -sf $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
                   $ANDROID_SDK_ROOT/tools/bin/sdkmanager

      - name: Verify sdkmanager at legacy tools location
        run: |
          echo "Legacy sdkmanager path:" $ANDROID_SDK_ROOT/tools/bin/sdkmanager
          $ANDROID_SDK_ROOT/tools/bin/sdkmanager --version


      # 6) Verify sdkmanager is on PATH
      - name: Verify sdkmanager
        run: |
          which sdkmanager
          sdkmanager --version

      # 7) Accept licenses and install Android SDK components
# 기존의 “Install required Android SDK components” 부분만 교체

      - name: Install required Android SDK components
        run: |
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "ndk;25.2.9519653" \
            "cmake;3.22.1" \
            "extras;google;m2repository" \
            "extras;android;m2repository"

      # 8) Pin packaging/setuptools to avoid metadata‐generation errors
      - name: Pin packaging & setuptools
        run: |
          python3 -m pip install --upgrade pip
          pip install setuptools==65.5.0 packaging==21.3 wheel

      # 9) Install Buildozer & python‐for‐android

      # … (앞부분 생략) …

      # 10) Buildozer & p4a 설치
      - name: Install Buildozer & p4a
        run: |
          pip install cython==0.29.34 \
                      buildozer==1.5.0
          # 안정된 p4a 릴리스로 고정
          pip install python-for-android==2023.09.16

      # 11) Build APK (Debug) and capture logs
      - name: Build APK (Debug) and capture logs
        run: |
          buildozer android clean || true
          buildozer android debug --verbose | tee buildozer.log
        continue-on-error: true

      
  
      - name: Upload full build log
        uses: actions/upload-artifact@v4
        with:
          name: buildozer-full-log
          path: buildozer.log
          
      # 11) Upload the APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: FFTApp-debug-apk
          path: bin/*.apk
          if-no-files-found: error
